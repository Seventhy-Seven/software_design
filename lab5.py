import random

def raschet():
    try:
        # оценка вероятности безотказной работы
        Q = int(input("Введите число зарегистрированных отказов: "))
        N = int(input("Введите число экспериментов: "))
        P = 1 - Q / N
        print(f"Вероятность безотказной работы Н0401(P): {P}")
        print("-------------------------------------------------------------------------------")

        # расчет среднего времени восстановления
        a = float(input("Введите интервал для определения среднего времени распределения (a): "))
        b = float(input("Введите интервал для определения среднего времени распределения (b): "))
        n = int(input("Введите количество значений для выборки: "))
        Tvd = float(input("Введите допустимое время восстановления: "))
        
        sumT = sum(Rx(a, b) for _ in range(n))
        Tv = sumT / n  # среднее время восстановления

        # оценка по среднему времени восстановления
        Qv = 1 if Tv <= Tvd else Tvd / Tv
        print(f"- Оценка по среднему времени восстановления Н0501(Qв): {Qv:.3f} (где среднее время восстановления (Tв) {Tv:.3f})")

        # оценка по продолжительности преобразования входного набора данных в выходной
        a = float(input("Введите интервал для определения продолжительности преобразования i-го входного набора данных (a): "))
        b = float(input("Введите интервал для определения продолжительности преобразования i-го входного набора данных (b): "))
        m = int(input("Введите количество значений для выборки: "))
        Tpd = float(input("Введите допустимое время преобразования i-го входного набора данных: "))

        # список фактической продолжительности преобразования i-го входного набора данных Tp i-е
        Tp = [Rx(a, b) for _ in range(m)]

        # список оценок по продолжительности преобразования входного набора данных в выходной
        Qp = [1.0 if x <= Tpd else Tpd / x for x in Tp]

        # произведем усреднение оценки по продолжительности преобразования
        Qpsr = sum(Qp) / len(Qp)
        print(f"- Усредненная оценка по продолжительности преобразования входного набора данных в выходной Н0502: {Qpsr:.3f}")

        # расчет итоговой оценки по критерию обеспечение обработки заданного объема информации
        Pjk = (Qv + Qpsr) / 2
        print(f"Обеспечение обработки заданного объема информации: {Pjk:.3f}")
        print("-------------------------------------------------------------------------------")

        Vij = 0.5  # весовой коэффициент
        Pij = P * Vij + Pjk * Vij  # Абсолютные показатели критериев фактора качества
        print(f"- Абсолютный показатель качества критерия Работоспособность фактора Надежность: {Pij:.3f}")

        PijBase = 0.95  # базовый критерий надежности
        Kij = Pij / PijBase
        print(f"- Относительный показатель качества критерия Работоспособность фактора Надежность: {Kij:.3f}")
        print(f"- Фактор качества: {Kij:.3f}")

    except Exception as e:
        print(e)
        print("что-то пошло не так...")


# метод случайной выборки на интервале от a до b
def Rx(a, b):
    return (b - a) * random.random() + a


if __name__ == "__main__":
    raschet()
